name: Release to Maven repository

on:
    release:
        types: [published]

jobs:
    build:
        runs-on: [ubuntu-latest]

        steps:
            -   uses: actions/checkout@v2
            -   name: Set up JDK 1.8
                uses: actions/setup-java@v1
                with:
                    java-version: 1.8
            -   uses: actions/cache@v1
                with:
                    path: ~/.m2/repository
                    key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
            -   name: Build project
                run: mvn -B compile --file pom.xml

    test:
        needs: build
        runs-on: [ubuntu-latest]
        steps:
            -   uses: actions/checkout@v2
            -   name: Set up JDK 1.8
                uses: actions/setup-java@v1
                with:
                    java-version: 1.8
            -   uses: actions/cache@v1
                with:
                    path: ~/.m2/repository
                    key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
            -   name: Test project
                run: mvn -B test --file pom.xml


    deploy:
        needs: [build, test]
        runs-on: [ubuntu-latest]

        steps:
            -   uses: actions/checkout@v2

            -   name: Abort if that version is a snapshot
                run: |
                    declare version=$(cat pom.xml  | grep -i "<version>" | head -n 1 | sed -E 's@[ \t]*.version.(.*)./version.@\1@g')
                    if [[ $version == *"SNAPSHOT"* ]]; then exit 0; else echo "Not a snapshot. All good."; fi

            -   name: Set up JDK 1.8
                uses: actions/setup-java@v1
                with:
                    java-version: 1.8
            -   uses: actions/cache@v1
                with:
                    path: ~/.m2/repository
                    key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
            -   name: Setup GPG
                run: |
                    echo "$GPG_PRIVATE_KEY" > private.asc
                    gpg --import --batch private.asc
                env:
                    GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
            -   name: Deploy project
                run: |
                    export GPG_TTY=$(tty)
                    mvn -B clean deploy -Dmaven.test.skip=true --file pom.xml -s my_settings.xml -P release
                env:
                    MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
                    MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
                    GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
